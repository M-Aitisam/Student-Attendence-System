@inject AttendanceService AttendanceService
@inject NavigationManager nm
@using ClassLibraryModel
@inject IJSRuntime JSRuntime

<!-- Page Wrapper -->
<div class="wrapper" style="font-family: Calibri; background-color: #f8f9fa;">
    <!-- Main Content -->
    <div class="container-fluid py-4">
        <!-- Metrics Section -->
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm rounded text-center">
                    <div class="card-body">
                        <h5 class="text-secondary">Total Employees</h5>
                        <h2 class="fw-bold text-dark">@Employees.Count()</h2>
                        <span class="badge bg-success">+15%</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm rounded text-center">
                    <div class="card-body">
                        <h5 class="text-secondary">Active Employees</h5>
                        <h2 class="fw-bold text-dark">@Employees.Count(e => e.Status == "Active")</h2>
                        <span class="badge bg-info">Stable</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm rounded text-center">
                    <div class="card-body">
                        <h5 class="text-secondary">Inactive Employees</h5>
                        <h2 class="fw-bold text-dark">@Employees.Count(e => e.Status == "Inactive")</h2>
                        <span class="badge bg-warning">-10%</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm rounded text-center">
                    <div class="card-body">
                        <h5 class="text-secondary">New Recruits</h5>
                        <h2 class="fw-bold text-dark">@Employees.Count(e => e.IsNewRecruit)</h2>
                        <span class="badge bg-primary">+20%</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Attendance and Recruitment Section -->
        <div class="row mt-4">
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-primary text-white fw-bold">Daily Attendance Statistic</div>
                    <div class="card-body text-center">
                        <canvas id="attendanceChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-secondary text-white fw-bold">Recruitment Overview</div>
                    <div class="card-body text-center">
                        <canvas id="recruitmentChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loan Payment Section -->
        <div class="row mt-4">
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-success text-white fw-bold">Loan Payments</div>
                    <div class="card-body text-center">
                        <canvas id="loanPaymentChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-warning text-white fw-bold">Leave Applications</div>
                    <div class="card-body">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var application in LeaveApplications)
                                {
                                    <tr>
                                        <td>@application.EmployeeName</td>
                                        <td>@application.Date.ToShortDateString()</td>
                                        <td>@application.Status</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Employee List -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-dark text-white d-flex justify-content-between">
                        <span>Employee List</span>
                        <button class="btn btn-success btn-sm" @onclick="ShowAddEmployeeModal">Add New Employee</button>
                    </div>
                    <div class="card-body">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>ID</th>
                                    <th>Email</th>
                                    <th>Date of Birth</th>
                                    <th>Join Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Employees.Any())
                                {
                                    @foreach (var employee in Employees)
                                    {
                                        <tr>
                                            <td>@employee.Name</td>
                                            <td>@employee.Id</td>
                                            <td>@employee.Email</td>
                                            <td>@employee.DOB.ToShortDateString()</td>
                                            <td>@employee.JoinDate.ToShortDateString()</td>
                                            <td>@employee.Status</td>
                                            <td>
                                                <button class="btn btn-primary btn-sm me-1" @onclick="() => ShowEditModalHandler(employee)">Edit</button>
                                                <button class="btn btn-danger btn-sm" @onclick="() => RemoveEmployee(employee)">Delete</button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-center">No employees found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modals -->
        @if (ShowEmployeeModal)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Employee Details</h5>
                            <button type="button" class="btn-close" @onclick="CloseEmployeeDetails"></button>
                        </div>
                        <div class="modal-body">
                            <p><strong>Name:</strong> @SelectedEmployee.Name</p>
                            <p><strong>ID:</strong> @SelectedEmployee.Id</p>
                            <p><strong>Email:</strong> @SelectedEmployee.Email</p>
                            <p><strong>DOB:</strong> @SelectedEmployee.DOB.ToShortDateString()</p>
                            <p><strong>Join Date:</strong> @SelectedEmployee.JoinDate.ToShortDateString()</p>
                            <p><strong>Status:</strong> @SelectedEmployee.Status</p>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-secondary" @onclick="CloseEmployeeDetails">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (ShowEditModal)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit Employee</h5>
                            <button type="button" class="btn-close" @onclick="CloseEditModal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="editName">Name</label>
                                <input type="text" id="editName" class="form-control" @bind="EditEmployeeData.Name" />
                            </div>
                            <div class="form-group">
                                <label for="editEmail">Email</label>
                                <input type="email" id="editEmail" class="form-control" @bind="EditEmployeeData.Email" />
                            </div>
                            <div class="form-group">
                                <label for="editStatus">Status</label>
                                <select id="editStatus" class="form-control" @bind="EditEmployeeData.Status">
                                    <option>Active</option>
                                    <option>Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary" @onclick="SaveEditChanges">Save Changes</button>
                            <button class="btn btn-secondary" @onclick="CloseEditModal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (ShowAddEmployeeModalState)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Add Employee</h5>
                            <button type="button" class="btn-close" @onclick="CloseAddEmployeeModal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="addName">Name</label>
                                <input type="text" id="addName" class="form-control" @bind="NewEmployee.Name" />
                            </div>
                            <div class="form-group">
                                <label for="addEmail">Email</label>
                                <input type="email" id="addEmail" class="form-control" @bind="NewEmployee.Email" />
                            </div>
                            <div class="form-group">
                                <label for="addStatus">Status</label>
                                <select id="addStatus" class="form-control" @bind="NewEmployee.Status">
                                    <option>Active</option>
                                    <option>Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary" @onclick="SaveNewEmployee">Save</button>
                            <button class="btn btn-secondary" @onclick="CloseAddEmployeeModal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<Employee> Employees = new();
    private List<LeaveApplication> LeaveApplications = new();
    private bool ShowEmployeeModal = false;
    private bool ShowEditModal = false;
    private bool ShowAddEmployeeModalState = false; // New state for Add Employee Modal
    private Employee SelectedEmployee;
    private Employee EditEmployeeData = new();
    private Employee NewEmployee = new();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeCharts");
        }
    }

    private void ShowEmployeeDetails(Employee employee)
    {
        SelectedEmployee = employee;
        ShowEmployeeModal = true;
    }

    private void CloseEmployeeDetails()
    {
        ShowEmployeeModal = false;
    }

    private void ShowAddEmployeeModal()
    {
        NewEmployee = new Employee(); // Initialize a new Employee object
        ShowAddEmployeeModalState = true;
    }

    private void CloseAddEmployeeModal()
    {
        ShowAddEmployeeModalState = false;
    }

    private void SaveNewEmployee()
    {
        Employees.Add(NewEmployee);
        ShowAddEmployeeModalState = false;
    }

    private void ShowEditModalHandler(Employee employee)
    {
        EditEmployeeData = employee;
        ShowEditModal = true;
    }

    private void CloseEditModal()
    {
        ShowEditModal = false;
    }

    private void SaveEditChanges()
    {
        var index = Employees.FindIndex(e => e.Id == EditEmployeeData.Id);
        if (index != -1)
        {
            Employees[index] = EditEmployeeData;
        }
        ShowEditModal = false;
    }

    private void RemoveEmployee(Employee employee)
    {
        Employees.Remove(employee);
    }
}