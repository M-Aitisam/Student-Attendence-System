@page "/settings"
@inject IJSRuntime JSRuntime
@inject SettingsService SettingsService

<div class="settings-container">
    <!-- User Preferences -->
    <section class="settings-section">
        <h4>User Preferences</h4>
        <div class="form-group">
            <label for="theme">Theme</label>
            <select id="theme" @bind="Settings.Theme" class="form-control">
                <option value="Light">Light</option>
                <option value="Dark">Dark</option>
                <option value="System">System Default</option>
            </select>
        </div>

        <div class="form-group">
            <label for="language">Language</label>
            <select id="language" @bind="Settings.Language" class="form-control">
                <option value="en-US">English</option>
                <option value="fr-FR">French</option>
                <option value="es-ES">Spanish</option>
            </select>
        </div>
    </section>

    <!-- Application Settings -->
    <section class="settings-section">
        <h4>Application Settings</h4>
        <div class="form-group">
            <label for="itemsPerPage">Items per Page</label>
            <input id="itemsPerPage" type="number" @bind="Settings.ItemsPerPage" min="5" max="100" class="form-control" />
        </div>

        <div class="form-group">
            <label for="enableAutoSave">Enable Auto Save</label>
            <input id="enableAutoSave" type="checkbox" @bind="Settings.EnableAutoSave" />
        </div>

        <div class="form-group">
            <label for="autoSaveInterval">Auto Save Interval (in seconds)</label>
            <input id="autoSaveInterval" type="range" @bind="Settings.AutoSaveInterval" min="5" max="60" />
            <span>@Settings.AutoSaveInterval seconds</span>
        </div>
    </section>

    <!-- Notification Settings -->
    <section class="settings-section">
        <h4>Notification Settings</h4>
        <div class="form-group">
            <label for="emailNotifications">Email Notifications</label>
            <input id="emailNotifications" type="checkbox" @bind="Settings.EmailNotifications" />
        </div>

        <div class="form-group">
            <label for="pushNotifications">Push Notifications</label>
            <input id="pushNotifications" type="checkbox" @bind="Settings.PushNotifications" />
        </div>
    </section>

    <!-- Actions -->
    <section class="actions">
        <button class="btn btn-primary" @onclick="SaveSettings">Save</button>
        <button class="btn btn-secondary" @onclick="ResetSettings">Reset</button>
    </section>
</div>

@code {
    private SettingsModel Settings = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Settings = await SettingsService.GetSettingsAsync();
            await SetTheme(Settings.Theme);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error initializing settings: {ex.Message}");
        }
    }

    private async Task SetTheme(string theme)
    {
        try
        {
            Console.WriteLine($"Setting theme to: {theme}"); // Log the selected theme
            await JSRuntime.InvokeVoidAsync("changeTheme", theme);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error setting theme: {ex.Message}");
        }
    }

    private async Task SaveSettings()
    {
        try
        {
            await SettingsService.SaveSettingsAsync(Settings);
            await SetTheme(Settings.Theme); // Apply the new theme
            Console.WriteLine("Settings saved.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving settings: {ex.Message}");
        }
    }

    private async void ResetSettings()
    {
        Settings = new SettingsModel(); // Resets to default
        await SetTheme(Settings.Theme); // Reset theme to default
    }
}
