@page "/TeacherDashboard"
@inject IJSRuntime JSRuntime
@inject AttendanceService AttendanceService
@using ClassLibraryModel
@using ClassLibraryDal

<style>
    /* Dashboard Styling */
    .dashboard {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .dashboard-card {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
        padding: 1rem;
        border-top: 4px solid #007bff;
        transition: transform 0.3s ease-in-out;
    }

        .dashboard-card:hover {
            transform: scale(1.05);
        }

    .online-board,
    .events-section,
    .performance-section {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 1rem;
        margin-top: 1rem;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: bold;
        border-bottom: 2px solid #007bff;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }

    #calendar {
        max-height: 400px;
    }

    .performance-chart {
        display: flex;
        justify-content: space-between;
        margin-top: 1rem;
    }

        .performance-chart div {
            flex: 1;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 8px;
            margin: 0 1rem;
        }
</style>

<div>
    <h1>Teacher Dashboard</h1>

    <!-- Dashboard Stats -->
    <div class="dashboard">
        <div class="dashboard-card">
            <h2>@Calendar.Sum(c => c.Events.Count)</h2>
            <p>Upcoming Events</p>
        </div>
        <div class="dashboard-card" style="border-top: 4px solid #28a745;">
            <h2>45</h2>
            <p>Active Social Learning</p>
        </div>
        <div class="dashboard-card" style="border-top: 4px solid #ffc107;">
            <h2>400.80 AUD</h2>
            <p>Total Unpaid</p>
        </div>
        <div class="dashboard-card" style="border-top: 4px solid #17a2b8;">
            <h2>2688.40 AUD</h2>
            <p>Total Paid</p>
        </div>
    </div>

    <!-- Recent Activities and Calendar -->
    <div class="row">
        <div class="col-md-6">
            <div class="online-board">
                <div class="section-title">Online Notice Board</div>
                <div>
                    @if (RecentActivities.Any())
                    {
                        @foreach (var activity in RecentActivities)
                        {
                            <div class="activity">
                                <strong>@activity.User</strong> (@activity.Role) @activity.Action <br />
                                <small>@activity.Details</small>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No recent activities to display.</p>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="events-section">
                <div class="section-title">Real-Time Calendar</div>
                <div id="calendar"></div>
            </div>
        </div>
    </div>

    <!-- Performance Section -->
    <div class="performance-section">
        <div class="section-title">Classroom Performance</div>
        <div class="performance-chart">
            <div>
                <h4>Top Performers</h4>
                <ul>
                    <li>Student A - 95%</li>
                    <li>Student B - 92%</li>
                    <li>Student C - 90%</li>
                </ul>
            </div>
            <div>
                <h4>Students Needing Attention</h4>
                <ul>
                    <li>Student X - 55%</li>
                    <li>Student Y - 60%</li>
                    <li>Student Z - 62%</li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Instructor Details -->
    <table class="table table-bordered mt-3">
        <thead class="table-light">
            <tr>
                <th>Instructor Name</th>
                <th>Designation</th>
                <th>Department</th>
                <th>Faculty Type</th>
                <th>Total Regular Classes</th>
                <th>Total Makeup Classes</th>
            </tr>
        </thead>
        <tbody>
            @if (InstructorDetails != null)
            {
                <tr>
                    <td>@InstructorDetails.Name</td>
                    <td>@InstructorDetails.Designation</td>
                    <td>@InstructorDetails.Department</td>
                    <td>@InstructorDetails.FacultyType</td>
                    <td>@InstructorDetails.TotalRegularClasses</td>
                    <td>@InstructorDetails.TotalMakeupClasses</td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">No instructor details available</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Attendance Table -->
    <div class="table-responsive mt-3">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Sr No.</th>
                    <th>Schedule ID</th>
                    <th>Subject</th>
                    <th>Teacher</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Attendance (Start Time)</th>
                    <th>Attendance (End Time)</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @if (AttendanceRecords.Any())
                {
                    @foreach (var record in AttendanceRecords)
                    {
                        <tr>
                            <td>@record.SrNo</td>
                            <td>@record.ScheduleId</td>
                            <td>@record.Subject</td>
                            <td>@record.Teacher</td>
                            <td>@(record.StartDate?.ToString("dd/MM/yyyy") ?? "-")</td>
                            <td>@(record.EndDate?.ToString("dd/MM/yyyy") ?? "-")</td>
                            <td>@(record.StartTime?.ToString("hh\\:mm\\:ss") ?? "-")</td>
                            <td>@(record.EndTime?.ToString("hh\\:mm\\:ss") ?? "-")</td>
                            <td>@record.Status</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9" class="text-center">No attendance records available</td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
</div>

@code {
    private Instructor? InstructorDetails;
    private List<AttendanceRecord> AttendanceRecords = new();
    private List<CalendarDay> Calendar = new()
    {
        new CalendarDay
        {
            Date = DateTime.ParseExact("1 June 2019", "d MMMM yyyy", System.Globalization.CultureInfo.InvariantCulture),
            Events = new List<CalendarEvent>
            {
                new CalendarEvent { Title = "10a Demo Test" },
                new CalendarEvent { Title = "2p Parent Teacher Meeting" }
            }
        }
    };

    private List<Activity> RecentActivities = new()
    {
        new Activity { User = "Mark Thompson", Role = "Admin", Action = "processed payment for", Details = "Invoice #12003" },
        new Activity { User = "Sarah Lee", Role = "Manager", Action = "updated schedule for", Details = "Room A" }
    };

    protected override async Task OnInitializedAsync()
    {
        InstructorDetails = await AttendanceService.GetInstructorDetailsAsync();
        AttendanceRecords = await AttendanceService.GetAttendanceRecordsAsync();
    }

    private class CalendarDay
    {
        public DateTime Date { get; set; }
        public List<CalendarEvent> Events { get; set; } = new();
    }

    private class CalendarEvent
    {
        public string Title { get; set; } = string.Empty;
    }

    private class Activity
    {
        public string User { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
        public string Action { get; set; } = string.Empty;
        public string Details { get; set; } = string.Empty;
    }
}
