@page "/TeacherDashboard"
@inject AttendanceService AttendanceService

<h3>Teacher Dashboard</h3>

<div>
    <h4>Instructor Details</h4>
    @if (InstructorDetails != null)
    {
        <p>Name: @InstructorDetails.Name</p>
        <p>Designation: @InstructorDetails.Designation</p>
        <p>Department: @InstructorDetails.Department</p>
    }
    else
    {
        <p>No instructor details available</p>
    }
</div>

<div>
    <h4>Attendance Records</h4>
    @if (AttendanceRecords != null && AttendanceRecords.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Sr No</th>
                    <th>Schedule ID</th>
                    <th>Subject Name</th>
                    <th>Schedule Date</th>
                    <th>Class Time</th>
                    <th>Class Name</th>
                    <th>Duration</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var record in AttendanceRecords)
                {
                    <tr>
                        <td>@record.SrNo</td>
                        <td>@record.ScheduleID</td>
                        <td>@record.SubjectName</td>
                        <td>@record.ScheduleDate?.ToShortDateString()</td>
                        <td>@record.ClassTime</td>
                        <td>@record.ClassName</td>
                        <td>@record.Duration</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No attendance records available</p>
    }
</div>

@code {
    private Instructor? InstructorDetails;
    private List<AttendanceRecord>? AttendanceRecords;

    protected override async Task OnInitializedAsync()
    {
        AttendanceRecords = await AttendanceService.GetAttendanceRecordsAsync();
        InstructorDetails = AttendanceService.GetInstructorDetails("SomeClass", "SomeSubject", "TeacherName");
    }
}
