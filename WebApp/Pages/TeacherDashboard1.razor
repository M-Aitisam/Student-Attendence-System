@page "/TeacherDashboard"
@inject IJSRuntime JSRuntime

<style>
    /* Dashboard Styling */
    .dashboard {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .dashboard-card {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
        padding: 1rem;
        border-top: 4px solid #007bff;
        transition: transform 0.3s ease-in-out;
    }

        .dashboard-card:hover {
            transform: scale(1.05);
        }

    .online-board, .events-section, .performance-section {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 1rem;
        margin-top: 1rem;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: bold;
        border-bottom: 2px solid #007bff;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }

    #calendar {
        max-height: 400px;
    }

    /* Performance chart */
    .performance-chart {
        display: flex;
        justify-content: space-between;
        margin-top: 1rem;
    }

        .performance-chart div {
            flex: 1;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 8px;
            margin: 0 1rem;
        }
</style>

<div>
    <h1>Teacher Dashboard</h1>

    <!-- Dashboard Stats -->
    <div class="dashboard">
        <div class="dashboard-card">
            <h2>@Calendar.Sum(c => c.Events.Count)</h2>
            <p>Upcoming Events</p>
        </div>
        <div class="dashboard-card" style="border-top: 4px solid #28a745;">
            <h2>45</h2>
            <p>Active Social Learning</p>
        </div>
        <div class="dashboard-card" style="border-top: 4px solid #ffc107;">
            <h2>400.80 AUD</h2>
            <p>Total Unpaid</p>
        </div>
        <div class="dashboard-card" style="border-top: 4px solid #17a2b8;">
            <h2>2688.40 AUD</h2>
            <p>Total Paid</p>
        </div>
    </div>

    <!-- Recent Activities and Calendar -->
    <div class="row">
        <div class="col-md-6">
            <div class="online-board">
                <div class="section-title">Online Notice Board</div>
                <div>
                    @if (RecentActivities.Any())
                    {
                        @foreach (var activity in RecentActivities)
                        {
                            <div class="activity">
                                <strong>@activity.User</strong> (@activity.Role) @activity.Action <br />
                                <small>@activity.Details</small>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No recent activities to display.</p>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="events-section">
                <div class="section-title">Real-Time Calendar</div>
                <div id="calendar"></div>
            </div>
        </div>
    </div>

    <!-- Performance Section -->
    <div class="performance-section">
        <div class="section-title">Classroom Performance</div>
        <div class="performance-chart">
            <div>
                <h4>Top Performers</h4>
                <ul>
                    <li>Student A - 95%</li>
                    <li>Student B - 92%</li>
                    <li>Student C - 90%</li>
                </ul>
            </div>
            <div>
                <h4>Students Needing Attention</h4>
                <ul>
                    <li>Student X - 55%</li>
                    <li>Student Y - 60%</li>
                    <li>Student Z - 62%</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@code {
    private List<CalendarDay> Calendar = new()
    {
        new CalendarDay
        {
            Date = "Monday, 1 June 2019",
            Events = new List<CalendarEvent>
            {
                new CalendarEvent { Title = "10a Demo Test" },
                new CalendarEvent { Title = "2p Parent Teacher Meeting" }
            }
        },
        new CalendarDay
        {
            Date = "Tuesday, 2 June 2019",
            Events = new List<CalendarEvent>
            {
                new CalendarEvent { Title = "10a Lecture Demo" }
            }
        }
    };

    private class CalendarDay
    {
        public string Date { get; set; } = string.Empty;
        public List<CalendarEvent> Events { get; set; } = new();
    }

    private class CalendarEvent
    {
        public string Title { get; set; } = string.Empty;
        public string Start { get; set; } = string.Empty;  // Add this property to define start date/time
    }

    private List<Activity> RecentActivities = new()
    {
        new Activity { User = "Mark Thompson", Role = "Admin", Action = "processed payment for", Details = "Invoice (Tuition Fees for 2019)" },
        new Activity { User = "Mark Thompson", Role = "Admin", Action = "created an invoice for", Details = "Tuition Fees for 2019" },
        new Activity { User = "Mark Thompson", Role = "Admin", Action = "created an invoice for", Details = "Other Fees" }
    };

    private List<CalendarEvent> CalendarEvents = new()
    {
        new CalendarEvent { Title = "Demo Test", Start = DateTime.Now.AddDays(1).ToString("yyyy-MM-dd") },
        new CalendarEvent { Title = "Parent Teacher Meeting", Start = DateTime.Now.AddDays(5).ToString("yyyy-MM-dd") }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Pass calendar events to JavaScript
            var eventsJsArray = CalendarEvents.Select(e => new { title = e.Title, start = e.Start }).ToList();
            await JSRuntime.InvokeVoidAsync("initializeCalendar", eventsJsArray);
        }
    }

    private class Activity
    {
        public string User { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
        public string Action { get; set; } = string.Empty;
        public string Details { get; set; } = string.Empty;
    }
}
